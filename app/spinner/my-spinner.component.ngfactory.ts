/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../app/spinner/my-spinner.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './my-spinner.component.css.shim';
import * as import9 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import10 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import11 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/common/src/directives/ng_class';
export class Wrapper_MySpinner {
  /*private*/ _eventHandler:Function;
  context:import0.MySpinner;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.MySpinner();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_maxValue(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.maxValue = currValue;
      this._expr_0 = currValue;
    }
  }
  check_minValue(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.minValue = currValue;
      this._expr_1 = currValue;
    }
  }
  check_counterValue(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.counterValue = currValue;
      this._expr_2 = currValue;
    }
  }
  check_bdgClass(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.bdgClass = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.counterChange.subscribe(_eventHandler.bind(view,'counterChange'))); }
  }
}
var renderType_MySpinner_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_MySpinner_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MySpinner>;
  _MySpinner_0_3:Wrapper_MySpinner;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MySpinner_Host0,renderType_MySpinner_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'div',new import3.InlineArray2(2,'mySpinner',''),rootSelector,(null as any));
    this.compView_0 = new View_MySpinner0(this.viewUtils,this,0,this._el_0);
    this._MySpinner_0_3 = new Wrapper_MySpinner();
    this.compView_0.create(this._MySpinner_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._MySpinner_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MySpinner) && (0 === requestNodeIndex))) { return this._MySpinner_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MySpinner_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MySpinner_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MySpinnerNgFactory:import7.ComponentFactory<import0.MySpinner> = new import7.ComponentFactory<import0.MySpinner>('[mySpinner]',View_MySpinner_Host0,import0.MySpinner);
const styles_MySpinner:any[] = [import8.styles];
var renderType_MySpinner:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_MySpinner,{});
export class View_MySpinner0 extends import2.AppView<import0.MySpinner> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import9.Wrapper_NgClass;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _NgClass_15_3:import9.Wrapper_NgClass;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  /*private*/ _expr_22:any;
  _map_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  _map_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MySpinner0,renderType_MySpinner,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_22 = import1.UNINITIALIZED;
    this._map_23 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
    this._expr_24 = import1.UNINITIALIZED;
    this._expr_25 = import1.UNINITIALIZED;
    this._expr_26 = import1.UNINITIALIZED;
    this._map_27 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','btn-group-vertical votingWdt center-block','role','group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray2(2,'class','btn btn-sm btn-default'),(null as any));
    this._NgClass_2_3 = new import9.Wrapper_NgClass(this.parentView.injectorGet(import10.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import11.KeyValueDiffers,this.parentIndex),new import12.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'span',new import3.InlineArray2(2,'class','glyphicon glyphicon-menu-up'),(null as any));
    this._text_5 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray2(2,'class','btn btn-sm btn-default disabled'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_10 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_7,'span',new import3.InlineArray2(2,'class','badge'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'',(null as any));
    this._text_13 = this.renderer.createText(this._el_7,'\n    ',(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray2(2,'class','btn btn-sm btn-default'),(null as any));
    this._NgClass_15_3 = new import9.Wrapper_NgClass(this.parentView.injectorGet(import10.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import11.KeyValueDiffers,this.parentIndex),new import12.ElementRef(this._el_15),this.renderer);
    this._text_16 = this.renderer.createText(this._el_15,'\n        ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_15,'span',new import3.InlineArray2(2,'class','glyphicon glyphicon-menu-down'),(null as any));
    this._text_18 = this.renderer.createText(this._el_15,'\n    ',(null as any));
    this._text_19 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'swipedown',(null as any),'swipeup',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_15,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_15));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._NgClass_2_3.context; }
    if (((token === import13.NgClass) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 18)))) { return this._NgClass_15_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = 'btn btn-sm btn-default';
    this._NgClass_2_3.check_klass(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this._map_23((this.context.counterValue >= this.context.maxValue));
    this._NgClass_2_3.check_ngClass(currVal_2_0_1,throwOnChange,false);
    this._NgClass_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_15_0_0:any = 'btn btn-sm btn-default';
    this._NgClass_15_3.check_klass(currVal_15_0_0,throwOnChange,false);
    const currVal_15_0_1:any = this._map_27((this.context.counterValue <= this.context.minValue));
    this._NgClass_15_3.check_ngClass(currVal_15_0_1,throwOnChange,false);
    this._NgClass_15_3.ngDoCheck(this,this._el_15,throwOnChange);
    const currVal_22:any = (this.context.counterValue >= this.context.maxValue);
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementProperty(this._el_2,'disabled',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_24:any = import3.inlineInterpolate(1,'glyphicon ',this.context.bdgClass,'');
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_9,'className',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = import3.inlineInterpolate(1,'',this.context.counterValue,'');
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setText(this._text_12,currVal_25);
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = (this.context.counterValue <= this.context.minValue);
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementProperty(this._el_15,'disabled',currVal_26);
      this._expr_26 = currVal_26;
    }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'swipedown')) {
      const pd_sub_0:any = ((<any>this.context.decrement()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'swipeup')) {
      const pd_sub_1:any = ((<any>this.context.increment()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.increment()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_15(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.decrement()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}